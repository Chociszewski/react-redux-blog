{"version":3,"sources":["actions/types.js","actions/index.js","components/Home.js","components/App.js","reducers/index.js","reducers/postsReducer.js","index.js"],"names":["FETCH_COMMENTS","fetchComments","response","axios","get","type","payload","Home","this","props","posts","map","post","react_default","a","createElement","key","title","body","showPosts","Component","connect","state","actions","App","BrowserRouter","basename","process","Link","to","Route","exact","path","component","combineReducers","arguments","length","undefined","action","data","Object","toConsumableArray","concat","ReactDOM","render","es","store","createStore","reducers","applyMiddleware","reduxPromise","components_App","document","getElementById"],"mappings":"iTAAaA,EAAiB,kCCGvB,SAASC,IACd,IAAMC,EAAWC,IAAMC,IAAI,8CAC3B,MAAO,CACLC,KAAML,EACNM,QAASJ,OCHPK,8LAEFC,KAAKC,MAAMR,oDAIX,OAAOO,KAAKC,MAAMC,MAAMC,IAAI,SAAAC,GAC1B,OACEC,EAAAC,EAAAC,cAAA,MAAIC,IAAKJ,EAAKK,OACXL,EAAKK,MACNJ,EAAAC,EAAAC,cAAA,SAAIH,EAAKM,0CAOf,OACEL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKP,KAAKW,qBAnBCC,aA4BJC,kBAHf,SAAyBC,GACvB,MAAO,CAAEZ,MAAOY,EAAMZ,QAItBa,EAFaF,CAGbd,GCJaiB,mLAxBX,OACEX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAQC,SAAUC,qBAChBd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,GAAG,KAAT,SAEFhB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,GAAG,UAAT,UAEFhB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,GAAG,WAAT,YAIJhB,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW1B,aAnBzBa,qBCFHc,cAAgB,CAC7BxB,MCFa,WAA6B,IAApBY,EAAoBa,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,GAAIG,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1C,OAAQC,EAAOjC,MACb,KAAKL,EACH,IAAMU,EAAQ4B,EAAOhC,QAAQiC,KAE7B,OAAOC,OAAAC,EAAA,EAAAD,CAAIlB,GAAXoB,OAAAF,OAAAC,EAAA,EAAAD,CAAqB9B,IACvB,QACE,OAAOY,uBCDbqB,IAASC,OACP/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAUC,MAAOC,YAAYC,EAAUC,YAAgBC,OACrDrC,EAAAC,EAAAC,cAACoC,EAAD,OAGFC,SAASC,eAAe","file":"static/js/main.7e56bdfc.chunk.js","sourcesContent":["export const FETCH_COMMENTS = \"fetch_comments\";\n","import { FETCH_COMMENTS } from \"./types\";\nimport axios from \"axios\";\n\nexport function fetchComments() {\n  const response = axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n  return {\n    type: FETCH_COMMENTS,\n    payload: response\n  };\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/index.js\";\n\nclass Home extends Component {\n  componentDidMount() {\n    this.props.fetchComments();\n  }\n\n  showPosts() {\n    return this.props.posts.map(post => {\n      return (\n        <li key={post.title}>\n          {post.title}\n          <p>{post.body}</p>\n        </li>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ul>{this.showPosts()}</ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { posts: state.posts };\n}\nexport default connect(\n  mapStateToProps,\n  actions\n)(Home);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Home from \"./Home\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/topics\">Topics</Link>\n            </li>\n          </ul>\n\n          <hr />\n\n          <Route exact path=\"/\" component={Home} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport postsReducer from \"./postsReducer\";\n\nexport default combineReducers({\n  posts: postsReducer\n});\n","import { FETCH_COMMENTS } from \"../actions/types\";\n\nexport default function(state = [], action) {\n  switch (action.type) {\n    case FETCH_COMMENTS:\n      const posts = action.payload.data;\n\n      return [...state, ...posts];\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport App from \"./components/App\";\nimport reducers from \"./reducers/\";\nimport reduxPromise from \"redux-promise\";\n\nReactDOM.render(\n  <Provider store={createStore(reducers, applyMiddleware(reduxPromise))}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}